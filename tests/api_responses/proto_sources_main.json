[{"name":"doc_tests.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\nimport \"helpers.proto\";\n\npackage exonum.doc_tests;\n\nmessage CreateWallet { string name = 1; }\n\nmessage Point {\n  int32 x = 1;\n  int32 y = 2;\n}\n\nmessage TxA {\n  // Transaction fields\n}\n\nmessage TxB {\n  /// ...\n}\n\nmessage MyTransaction { exonum.PublicKey public_key = 1; }\n\nmessage MyStructSmall {\n  exonum.PublicKey key = 1;\n  uint32 num_field = 2;\n  string string_field = 3;\n}\nmessage MyStructBig {\n  exonum.Hash hash = 1;\n  MyStructSmall my_struct_small = 2;\n}\n"},{"name":"consensus.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// The messages collection for the default Exonum consensus implementation.\n\nsyntax = \"proto3\";\n\npackage exonum.consensus;\n\nimport \"helpers.proto\";\nimport \"blockchain.proto\";\nimport \"runtime.proto\";\nimport \"google/protobuf/timestamp.proto\";\n\n// Container for the signed messages.\n//\n// Keep in mind, that:\n// hash(SignedMessage) = hash(exonum_msg || key.bytes || sign.bytes)\nmessage SignedMessage {\n  // Message payload.\n  bytes payload = 1;\n  // Message author.\n  exonum.PublicKey author = 2;\n  // Digital signature.\n  exonum.Signature signature = 3;\n}\n\n// List of consensus messages\n\nmessage Connect {\n  string host = 1;\n  google.protobuf.Timestamp time = 2;\n  string user_agent = 3;\n}\n\nmessage Status {\n  uint64 height = 1;\n  exonum.Hash last_hash = 2;\n}\n\nmessage Propose {\n  uint32 validator = 1;\n  uint64 height = 2;\n  uint32 round = 3;\n  exonum.Hash prev_hash = 4;\n  repeated exonum.Hash transactions = 5;\n}\n\nmessage Prevote {\n  uint32 validator = 1;\n  uint64 height = 2;\n  uint32 round = 3;\n  exonum.Hash propose_hash = 4;\n  uint32 locked_round = 5;\n}\n\nmessage Precommit {\n  uint32 validator = 1;\n  uint64 height = 2;\n  uint32 round = 3;\n  exonum.Hash propose_hash = 4;\n  exonum.Hash block_hash = 5;\n  google.protobuf.Timestamp time = 6;\n}\n\nmessage BlockResponse {\n  exonum.PublicKey to = 1;\n  exonum.Block block = 2;\n  repeated bytes precommits = 3;\n  repeated exonum.Hash transactions = 4;\n}\n\nmessage TransactionsResponse {\n  exonum.PublicKey to = 1;\n  repeated bytes transactions = 2;\n}\n\nmessage ProposeRequest {\n  exonum.PublicKey to = 1;\n  uint64 height = 2;\n  exonum.Hash propose_hash = 3;\n}\n\nmessage TransactionsRequest {\n  exonum.PublicKey to = 1;\n  repeated exonum.Hash txs = 2;\n}\n\nmessage PrevotesRequest {\n  exonum.PublicKey to = 1;\n  uint64 height = 2;\n  uint32 round = 3;\n  exonum.Hash propose_hash = 4;\n  exonum.BitVec validators = 5;\n}\n\nmessage PeersRequest { exonum.PublicKey to = 1; }\n\nmessage BlockRequest {\n  exonum.PublicKey to = 1;\n  uint64 height = 2;\n}\n\nmessage ExonumMessage {\n  oneof message {\n    exonum.runtime.AnyTx any_tx = 1;\n    Connect connect = 2;\n    Status status = 3;\n\n    Precommit precommit = 4;\n    Propose propose = 5;\n    Prevote prevote = 6;\n\n    TransactionsResponse transactions_response = 7;\n    BlockResponse block_response = 8;\n\n    ProposeRequest propose_request = 9;\n    TransactionsRequest transactions_request = 10;\n    PrevotesRequest prevotes_request = 11;\n    PeersRequest peers_request = 12;\n    BlockRequest block_request = 13;\n  }\n}"},{"name":"tests.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\nimport \"helpers.proto\";\nimport \"google/protobuf/timestamp.proto\";\n\npackage exonum.tests;\n\nmessage TimestampTx { bytes data = 1; }\n\nmessage TxAfterCommit { uint64 height = 1; }\n\nmessage TxConfig {\n  exonum.PublicKey from = 1;\n  bytes config = 2;\n  uint64 actual_from = 3;\n}\n\nmessage TxSimple {\n  exonum.PublicKey public_key = 1;\n  string msg = 2;\n}\n\nmessage TestServiceTx { uint64 value = 1; }\n\nmessage TestServiceInit { string msg = 1; }\n\nmessage BlockchainTestTxA { uint64 a = 1; }\n\nmessage BlockchainTestTxB {\n  uint64 b = 1;\n  uint32 c = 2;\n}\n\nmessage CreateWallet {\n  exonum.PublicKey pubkey = 1;\n  string name = 2;\n}\n\nmessage Transfer {\n  exonum.PublicKey from = 1;\n  exonum.PublicKey to = 2;\n  uint64 amount = 3;\n}\n\nmessage Point {\n  uint32 x = 1;\n  uint32 y = 2;\n}\n\nmessage TestProtobufConvert {\n  exonum.PublicKey key = 1;\n  exonum.Hash hash = 2;\n  uint32 unsigned_32 = 3;\n  uint64 unsigned_64 = 4;\n  int32 regular_i32 = 5;\n  int64 regular_i64 = 6;\n  fixed32 fixed_u32 = 7;\n  fixed64 fixed_u64 = 8;\n  sfixed32 fixed_i32 = 9;\n  sfixed64 fixed_i64 = 10;\n  float float_32 = 11;\n  double float_64 = 12;\n  bool boolean = 13;\n  sint32 s_i32 = 14;\n  sint64 s_i64 = 15;\n  bytes bytes_field = 16;\n  string string_field = 17;\n  Point message_field = 18;\n  exonum.BitVec bit_vec = 19;\n  google.protobuf.Timestamp time = 20;\n}\n\nmessage TestProtobufConvertRepeated {\n  repeated exonum.PublicKey keys = 1;\n  repeated bytes bytes_array = 2;\n  repeated string string_array = 3;\n  repeated uint32 num_array = 4;\n}\n\nmessage TestProtobufConvertMap {\n  map<uint32, uint64> num_map = 1;\n  map<uint32, string> string_map = 2;\n  map<uint32, bytes> bytes_map = 4;\n  map<uint32, Point> point_map = 5;\n  map<string, uint64> key_string_map = 6;\n}\n\nmessage TestFixedArrays {\n  bytes fixed_array_8 = 1;\n  bytes fixed_array_16 = 2;\n  bytes fixed_array_32 = 3;\n}\n"},{"name":"blockchain.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\npackage exonum;\n\nimport \"helpers.proto\";\n\nmessage Block {\n  uint32 proposer_id = 1;\n  uint64 height = 2;\n  uint32 tx_count = 3;\n  exonum.Hash prev_hash = 4;\n  exonum.Hash tx_hash = 5;\n  exonum.Hash state_hash = 6;\n}\n\nmessage ConfigReference {\n  uint64 actual_from = 1;\n  exonum.Hash cfg_hash = 2;\n}\n\nmessage TxLocation {\n  uint64 block_height = 1;\n  uint64 position_in_block = 2;\n}\n"},{"name":"helpers.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\npackage exonum;\n\nmessage Hash { bytes data = 1; }\n\nmessage PublicKey { bytes data = 1; }\n\nmessage Signature { bytes data = 1; }\n\nmessage BitVec {\n  bytes data = 1;\n  uint64 len = 2;\n}\n"},{"name":"runtime.proto","content":"// Copyright 2019 The Exonum Team\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\npackage exonum.runtime;\n\nimport \"google/protobuf/empty.proto\";\n\n// Unique service transaction identifier.\nmessage CallInfo {\n  // Service instance identifier.\n  uint32 instance_id = 1;\n  // Identifier of method in service interface to call.\n  uint32 method_id = 2;\n}\n\nmessage AnyTx {\n  CallInfo call_info = 1;\n  bytes arguments = 2;\n}\n\nmessage ArtifactId {\n  uint32 runtime_id = 1;\n  string name = 2;\n}\n\nmessage InstanceSpec {\n  uint32 id = 1;\n  string name = 2;\n  ArtifactId artifact = 3;\n}\n\n/// Result of unsuccessful runtime execution.\nmessage ExecutionError {\n  /// The kind of error that indicates in which module the error occurred.\n  uint32 kind = 1;\n  /// User defined error code that can have different meanings for the different\n  /// error kinds.\n  uint32 code = 2;\n  /// Optional description which doesn't affect `object_hash`.\n  string description = 3;\n}\n\n/// Result of runtime execution.\nmessage ExecutionStatus {\n  oneof result {\n    google.protobuf.Empty ok = 1;\n    ExecutionError error = 2;\n  }\n}\n"}]